[project]
name = "PyTestArch"
version = "4.0.0"
requires-python = ">=3.9"
description = "Test framework for software architecture based on imports between modules"
authors = [{ name = "zyskarch", email = "zyskarch@gmail.com" }]
maintainers = [{ name = "zyskarch", email = "zyskarch@gmail.com" }]
readme = "README.md"
license = "Apache-2.0"

keywords = ["architecture", "test"]
classifiers = [
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
]

dependencies = ["networkx>=3.2"]

[project.optional-dependencies]
visualization = ["matplotlib>=3.9"]

[project.urls]
issues = "https://github.com/zyskarch/pytestarch/issues"
documentation = "https://zyskarch.github.io/pytestarch/latest"
repository = "https://github.com/zyskarch/pytestarch"

[tool.poetry.group.dev.dependencies]
mkdocs = "1.6.0"
mkdocstrings-python = "1.10.3"
mkdocs-material = "9.5.25"
mkdocs-autorefs = "1.0.1"
mkdocs-material-extensions = "1.3.1"
mkdocstrings = "0.25.1"
griffe = "0.45.2"
nox = "2024.4.15"
pre-commit = "3.7.1"
pytest = "^8.2.1"
coverage = "^7.5.2"
mike = "2.1.1"
ruff = "^0.7.0"

[build-system]
requires = ["poetry-core>=2.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "F",      # Pyflakes
    "E",
    "W",      # Pylint Error, Warning
    "UP",     # pyupgrade
    "FURB",   # refurb
    "S",      # flake8-bandit
    "I",      # isort
    "RUF100", # Unneeded noqa
]
ignore = [
    "E501", # line too long -> handled by formatter
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101", # assert statement
    "E743", # ambiguous function name
]

[tool.ruff.lint.isort]
known-first-party = ["integration", "resources", "query_language"]
